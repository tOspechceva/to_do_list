# ui/pages/task_list_page.py
from PyQt6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QLabel, QPushButton, QScrollArea, QFrame
)
from PyQt6.QtCore import Qt
from models.task_manager import delete_task_by_id  # ‚Üê –¥–æ–±–∞–≤–∏–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∑–∂–µ


class TaskListPage(QWidget):
    def __init__(self, on_add_task_clicked, on_task_deleted, on_task_clicked):
        super().__init__()
        self.on_add_task_clicked = on_add_task_clicked
        self.on_task_deleted = on_task_deleted
        self.on_task_clicked = on_task_clicked  # ‚Üê –Ω–æ–≤–æ–µ
        self.setup_ui()

    def setup_ui(self):
        main_layout = QVBoxLayout()

        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
        self.scroll_area = QScrollArea()
        self.scroll_area.setWidgetResizable(True)
        self.scroll_content = QWidget()
        self.tasks_layout = QVBoxLayout()
        self.scroll_content.setLayout(self.tasks_layout)
        self.scroll_area.setWidget(self.scroll_content)

        # –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"
        button_to_add = QPushButton("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É")
        button_to_add.clicked.connect(self.on_add_task_clicked)

        main_layout.addWidget(self.scroll_area)
        main_layout.addWidget(button_to_add)

        self.setLayout(main_layout)

    def update_tasks_display(self, tasks):
        # –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
        while self.tasks_layout.count():
            child = self.tasks_layout.takeAt(0)
            if child.widget():
                child.widget().deleteLater()

        if not tasks:
            placeholder = QLabel("<h3>–ù–µ—Ç –∑–∞–¥–∞—á</h3>")
            placeholder.setAlignment(Qt.AlignmentFlag.AlignCenter)
            self.tasks_layout.addWidget(placeholder)
        else:
            for task in tasks:
                task_widget = self.create_task_widget(task)
                self.tasks_layout.addWidget(task_widget)

        self.tasks_layout.addStretch()  # —á—Ç–æ–±—ã –∑–∞–¥–∞—á–∏ –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–ª–∏—Å—å

# –í –º–µ—Ç–æ–¥–µ create_task_widget –≤ ui/pages/task_list_page.py

    def create_task_widget(self, task):
        widget = QFrame()
        widget.setFrameShape(QFrame.Shape.Box)
        layout = QHBoxLayout()

        # –ö–ª–∏–∫–∞–±–µ–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∑–∞–¥–∞—á–∏
        status_icon = {"pending": "‚è≥", "in_progress": "üîÑ", "completed": "‚úÖ"}.get(task.status, "‚ùì")
        deadline_str = task.deadline.strftime("%d.%m.%Y %H:%M") if task.deadline else "–Ω–µ—Ç"
        priority_display = task.get_priority_display()

        text = f"<b>{status_icon} {task.title}</b><br>" \
            f"<small>–î–µ–¥–ª–∞–π–Ω: {deadline_str} | –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {priority_display}</small>"

        label = QLabel(text)
        label.setTextFormat(Qt.TextFormat.RichText)
        label.setCursor(Qt.CursorShape.PointingHandCursor)  # –∫—É—Ä—Å–æ—Ä –∫–∞–∫ –Ω–∞ —Å—Å—ã–ª–∫–µ
        label.mousePressEvent = lambda e, t_id=task.id: self.on_task_clicked(t_id)  # ‚Üê –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞

        # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        delete_btn = QPushButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å")
        delete_btn.setFixedSize(100, 30)
        delete_btn.clicked.connect(lambda _, t_id=task.id: self.on_task_deleted(t_id))

        layout.addWidget(label)
        layout.addWidget(delete_btn)
        layout.setAlignment(delete_btn, Qt.AlignmentFlag.AlignTop)
        widget.setLayout(layout)
        return widget